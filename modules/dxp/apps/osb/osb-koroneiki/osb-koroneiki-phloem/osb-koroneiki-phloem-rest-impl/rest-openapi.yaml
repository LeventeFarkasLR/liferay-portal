components:
    parameters:
        AgentName:
            in: query
            description:
                The name of the user doing the action.
            name: agentName
            required: false
            schema:
                type: string
        AgentUID:
            in: query
            description:
                The Okta ID of the user doing the action.
            name: agentUID
            required: false
            schema:
                type: string
    schemas:
        Account:
            description:
                Represents an account.
            properties:
                assignedTeams:
                    description:
                        The teams that are assigned to this account.
                    items:
                        $ref: "#/components/schemas/Team"
                    readOnly: true
                    type: array
                code:
                    description:
                        The code of the account.
                    type: string
                contactEmailAddress:
                    description:
                        The account's contact email address.
                    type: string
                contacts:
                    description:
                        The account's contacts.
                    items:
                        $ref: "#/components/schemas/Contact"
                    type: array
                customerContacts:
                    description:
                        The account's customer contacts.
                    items:
                        $ref: "#/components/schemas/Contact"
                    readOnly: true
                    type: array
                dateCreated:
                    description:
                        The account's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the account's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description:
                        The description of the account.
                    type: string
                entitlements:
                    description:
                        The account's entitlements.
                    items:
                        $ref: "#/components/schemas/Entitlement"
                    readOnly: true
                    type: array
                externalLinks:
                    description:
                        The account's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    type: array
                faxNumber:
                    description:
                        The account's fax number.
                    type: string
                internal:
                    description:
                        A flag that identifies whether this account is an internal or test account.
                    type: boolean
                key:
                    description:
                        The account's key.
                    readOnly: true
                    type: string
                logoId:
                    deprecated: true
                    description:
                        The assetAttachmentId of the account's logo.
                    format: int64
                    type: integer
                name:
                    description:
                        The name of the account.
                    type: string
                parentAccountKey:
                    description:
                        The account's parent account key.
                    type: string
                phoneNumber:
                    description:
                        The account's phone number.
                    type: string
                postalAddresses:
                    description:
                        The account's postal addresses.
                    items:
                        $ref: "#/components/schemas/PostalAddress"
                    type: array
                productPurchases:
                    description:
                        The products that the account has purchased.
                    items:
                        $ref: "#/components/schemas/ProductPurchase"
                    type: array
                profileEmailAddress:
                    description:
                        The account's profile email address.
                    type: string
                region:
                    description:
                        The region responsible for the account.
                    enum: ["Australia", "Brazil", "China", "Global", "Hungary", "India", "Japan", "Spain", "United States"]
                    type: string
                status:
                    description:
                        The status of the account.
                    enum: ["Approved", "Closed", "Expired", "Inactive"]
                    type: string
                tier:
                    description:
                        The tier of the account.
                    enum: ["OEM", "Premier", "Regular", "Strategic"]
                    type: string
                website:
                    description:
                        The account's website.
                    type: string
                workerContacts:
                    description:
                        The account's worker contacts.
                    items:
                        $ref: "#/components/schemas/Contact"
                    readOnly: true
                    type: array
            type: object
        AccountPermission:
            properties:
                assignContact:
                    type: boolean
                assignTeam:
                    type: boolean
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        AuditEntry:
            description:
                An audit log that records changes to objects.
            properties:
                action:
                    description:
                        The action performed on the object.
                    enum: ["Add", "Assign", "Delete", "Renew", "Unassign", "Update"]
                    readOnly: true
                    type: string
                agentName:
                    description:
                        The full name of the user performing the audited action.
                    readOnly: true
                    type: string
                agentUID:
                    description:
                        The Okta ID of the user performing the audited action.
                    readOnly: true
                    type: string
                auditSetId:
                    description:
                        The id of related audit entries.
                    format: int64
                    readOnly: true
                    type: integer
                dateCreated:
                    description:
                        The audit entry's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description:
                        Additional information describing what occurred.
                    readOnly: true
                    type: string
                field:
                    description:
                        The field of the audited object.
                    readOnly: true
                    type: string
                key:
                    description:
                        The audit entry's key.
                    readOnly: true
                    type: string
                newValue:
                    description:
                        The new value of the field on the audited object.
                    readOnly: true
                    type: string
                oldValue:
                    description:
                        The old value of the field on the audited object.
                    readOnly: true
                    type: string
                summary:
                    description:
                        A summary of the what occurred.
                    readOnly: true
                    type: string
            type: object
        Contact:
            description:
                Represents a contact.
            properties:
                contactRoles:
                    description:
                        The contact's roles.
                    items:
                        $ref: "#/components/schemas/ContactRole"
                    type: array
                dateCreated:
                    description:
                        The contact's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the contact's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                emailAddress:
                    description:
                        The email address of the contact.
                    type: string
                emailAddressVerified:
                    description:
                        A flag that identifies whether the email address of this contact is verified.
                    type: boolean
                entitlements:
                    description:
                        The contact's entitlements.
                    items:
                        $ref: "#/components/schemas/Entitlement"
                    readOnly: true
                    type: array
                externalLinks:
                    description:
                        The contacts's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    readOnly: true
                    type: array
                firstName:
                    description:
                        The first name of the contact.
                    type: string
                key:
                    description:
                        The contact's key.
                    readOnly: true
                    type: string
                languageId:
                    description:
                        The language ID of the contact.
                    type: string
                lastName:
                    description:
                        The last name of the contact.
                    type: string
                middleName:
                    description:
                        The middle name of the contact.
                    type: string
                oktaId:
                    description:
                        The ID provisioned from Okta.
                    type: string
                teams:
                    description:
                        The teams that the contact is assigned to.
                    items:
                        $ref: "#/components/schemas/Team"
                    readOnly: true
                    type: array
                uuid:
                    description:
                        A universal identifier to reference this contact.
                    type: string
            required:
                - emailAddress
                - firstName
                - lastName
            type: object
        ContactAccountView:
            description:
                A contact's perspective of his/her relationship to an account.
            properties:
                account:
                    $ref: "#/components/schemas/Account"
                    readOnly: true
                customerContactRoles:
                    items:
                        $ref: "#/components/schemas/ContactRole"
                    readOnly: true
                    type: array
                workerContactRoles:
                    items:
                        $ref: "#/components/schemas/ContactRole"
                    readOnly: true
                    type: array
        ContactPermission:
            properties:
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        ContactRole:
            description:
                Represents a contact role.
            properties:
                dateCreated:
                    description:
                        The contact role's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the contact role's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description:
                        The description of the contact role.
                    type: string
                key:
                    description:
                        The contact role's key.
                    readOnly: true
                    type: string
                name:
                    description:
                        The name of the contact role.
                    type: string
                system:
                    description:
                        A flag that identifies whether this is a system role.
                    readOnly: true
                    type: boolean
                type:
                    description:
                        The contact role's type.
                    enum: ["Account Customer", "Account Worker", "Team"]
                    type: string
            required:
                - name
                - type
            type: object
        ContactRolePermission:
            properties:
                assignContact:
                    type: boolean
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        Entitlement:
            description:
                Represents products/services an account or contact is entitled to receive.
            properties:
                entitlementDefinitionKey:
                    description:
                        The key of the entitlement's definition.
                    readOnly: true
                    type: string
                name:
                    description:
                        The name of the entitlement.
                    readOnly: true
                    type: string
            type: object
        EntitlementDefinition:
            description:
                A definition of what an entitlement is.
            properties:
                dateCreated:
                    description:
                        The entitlement definition's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the entitlement definition's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                definition:
                    description:
                        Defines who has access to the entitlement using SQL.
                    type: string
                description:
                    description:
                        The description of the entitlement.
                    type: string
                externalLinks:
                    description:
                        The entitlement definition's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    readOnly: true
                    type: array
                key:
                    description:
                        The entitlement definition's key.
                    readOnly: true
                    type: string
                name:
                    description:
                        The name of the entitlement.
                    type: string
                status:
                    description:
                        The status of the entitlement definition.
                    enum: ["Approved", "Inactive"]
                    type: string
            required:
                - name
            type: object
        ExternalLink:
            description:
                Represents a link to an entity in a different domain.
            properties:
                dateCreated:
                    description:
                        The external link's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                domain:
                    description:
                        The external domain.
                    type: string
                entityId:
                    description:
                        The unique ID for the entity.
                    type: string
                entityName:
                    description:
                        The unique classification for the entity.
                    type: string
                key:
                    description:
                        The external link's key.
                    readOnly: true
                    type: string
                url:
                    description:
                        The url of the external entity.
                    readOnly: true
                    type: string
            required:
                - domain
                - entityId
                - entityName
            type: object
        Note:
            description:
                Additional notes for miscellaneous information.
            properties:
                content:
                    description:
                        The content of the note.
                    type: string
                creatorName:
                    description:
                        The full name of the user who created the note.
                    readOnly: true
                    type: string
                creatorUID:
                    description:
                        The Okta ID of the user who created the note.
                    readOnly: true
                    type: string
                dateCreated:
                    description:
                        The note's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the note's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                format:
                    description:
                        The style structure of the content.
                    enum: ["HTML", "Plain"]
                    type: string
                key:
                    description:
                        The note's key.
                    readOnly: true
                    type: string
                modifierName:
                    description:
                        The full name of the user who last modified the note.
                    readOnly: true
                    type: string
                modifierUID:
                    description:
                        The Okta ID of the user who last modified the note.
                    readOnly: true
                    type: string
                priority:
                    default: 1
                    description:
                        The importance of this note. A lower number indicates a higher importance.
                    type: integer
                status:
                    description:
                        The workflow status of the note.
                    enum: ["Approved", "Archived"]
                    type: string
                type:
                    description:
                        The type of information the note contains.
                    enum: ["General", "Sales"]
                    type: string
            type: object
        PostalAddress:
            description:
                Represents a mailing address. This follows the [`PostalAddress`](https://www.schema.org/PostalAddress) specification.
            properties:
                addressCountry:
                    description:
                        The address's country (e.g., United States).
                    type: string
                addressLocality:
                    description:
                        The address's locality (e.g., city).
                    type: string
                addressRegion:
                    description:
                        The address's region (e.g., California).
                    type: string
                addressType:
                    description:
                        The address's type.
                    type: string
                id:
                    description:
                        The address's ID.
                    format: int64
                    readOnly: true
                    type: integer
                mailing:
                    default: false
                    description:
                        A flag that identifies whether this is a mailing addrress.
                    type: boolean
                postalCode:
                    description:
                        The address's postal code (e.g., zip code).
                    type: string
                primary:
                    default: false
                    description:
                        A flag that identifies whether this is the main address of the user/organization.
                    type: boolean
                streetAddressLine1:
                    description:
                        The street address's first line (e.g., 1600 Amphitheatre Pkwy.).
                    type: string
                streetAddressLine2:
                    description:
                        The street address's second line.
                    type: string
                streetAddressLine3:
                    description:
                        The street address's third line.
                    type: string
            type: object
        Product:
            description:
                Represents a product.
            properties:
                dateCreated:
                    description:
                        The product's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the product's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                externalLinks:
                    description:
                        The product's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    type: array
                key:
                    description:
                        The product's key.
                    readOnly: true
                    type: string
                name:
                    description:
                        The name of the product.
                    type: string
                properties:
                    additionalProperties:
                        type: string
                    type: object
            required:
                - name
            type: object
        ProductConsumption:
            description:
                Represents a product consumption.
            properties:
                accountKey:
                    description:
                        The key of the account consuming the product.
                    readOnly: true
                    type: string
                dateCreated:
                    description:
                        The product consumption's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                endDate:
                    description:
                        The product consumption's end date if applicable.
                    format: date-time
                    type: string
                externalLinks:
                    description:
                        The product consumption's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    type: array
                key:
                    description:
                        The product consumption's key.
                    readOnly: true
                    type: string
                productKey:
                    description:
                        The key of the product being consumed.
                    type: string
                productPurchaseKey:
                    description:
                        The key of the product consumption's product purchase if applicable.
                    type: string
                properties:
                    additionalProperties:
                        type: string
                    type: object
                startDate:
                    description:
                        The product consumption's start date if applicable.
                    format: date-time
                    type: string
            required:
                - productKey
            type: object
        ProductConsumptionPermission:
            properties:
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        ProductPermission:
            properties:
                consume:
                    type: boolean
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        ProductPurchase:
            description:
                Represents a product purchase.
            properties:
                accountKey:
                    description:
                        The key of the account purchasing the product.
                    readOnly: true
                    type: string
                dateCreated:
                    description:
                        The product purchase's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                endDate:
                    description:
                        The product purchase's actual end date including extensions or grace periods.
                    format: date-time
                    type: string
                externalLinks:
                    description:
                        The product purchase's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    type: array
                key:
                    description:
                        The product purchase's key.
                    readOnly: true
                    type: string
                originalEndDate:
                    description:
                        The product purchase's original end date that was purchased from sales.
                    format: date-time
                    type: string
                perpetual:
                    description:
                        A flag that identifies if the product purchase has a start and end date.
                    type: boolean
                product:
                    description:
                        The product that is being purchased.
                    items:
                        $ref: "#/components/schemas/Product"
                    type: object
                productKey:
                    description:
                        The key of the product being purchased.
                    type: string
                properties:
                    additionalProperties:
                        type: string
                    type: object
                quantity:
                    default: 1
                    description:
                        The quantity of the product purchased.
                    type: integer
                startDate:
                    description:
                        The product purchase's start date.
                    format: date-time
                    type: string
                status:
                    description:
                        The workflow status of the product purchase.
                    enum: ["Approved", "Cancelled"]
                    type: string
            type: object
        ProductPurchasePermission:
            properties:
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        ProductPurchaseView:
            description:
                An aggregated view of Product Purchases grouped by Product.
            properties:
                product:
                    $ref: "#/components/schemas/Product"
                    readOnly: true
                productConsumptions:
                    items:
                        $ref: "#/components/schemas/ProductConsumption"
                    readOnly: true
                    type: array
                productPurchases:
                    items:
                        $ref: "#/components/schemas/ProductPurchase"
                    readOnly: true
                    type: array
        Team:
            description:
                Represents a team.
            properties:
                accountKey:
                    description:
                        The team's account's key.
                    readOnly: true
                    type: string
                contacts:
                    description:
                        The team's contacts.
                    items:
                        $ref: "#/components/schemas/Contact"
                    readOnly: true
                    type: array
                dateCreated:
                    description:
                        The team's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the team's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                externalLinks:
                    description:
                        The team's links to entities in external domains.
                    items:
                        $ref: "#/components/schemas/ExternalLink"
                    readOnly: true
                    type: array
                key:
                    description:
                        The team's key.
                    readOnly: true
                    type: string
                name:
                    description:
                        The name of the team.
                    type: string
                system:
                    description:
                        A flag that identifies whether this is a system team.
                    readOnly: true
                    type: boolean
                teamRoles:
                    description:
                        The team's account team roles.
                    items:
                        $ref: "#/components/schemas/TeamRole"
                    readOnly: true
                    type: array
            required:
                - name
            type: object
        TeamPermission:
            properties:
                assignContact:
                    type: boolean
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
        TeamRole:
            description:
                Represents a team role.
            properties:
                dateCreated:
                    description:
                        The team role's creation date.
                    format: date-time
                    readOnly: true
                    type: string
                dateModified:
                    description:
                        The most recent time that any of the team role's fields changed.
                    format: date-time
                    readOnly: true
                    type: string
                description:
                    description:
                        The description of the team role.
                    type: string
                key:
                    description:
                        The team role's key.
                    readOnly: true
                    type: string
                name:
                    description:
                        The name of the team role.
                    type: string
                type:
                    description:
                        The team role's type.
                    enum: ["Account", "Regular"]
                    type: string
            required:
                - name
                - type
            type: object
        TeamRolePermission:
            properties:
                assignTeam:
                    type: boolean
                delete:
                    type: boolean
                permissions:
                    type: boolean
                roleNames:
                    items:
                        type: string
                    type:
                        array
                update:
                    type: boolean
                view:
                    type: boolean
            type: object
info:
    description:
        "A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.osb.koroneiki.phloem.rest.client', and version '1.0.0'."
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "Koroneiki"
    version: v1.0
openapi: 3.0.1
paths:
    "/accounts":
        get:
            description:
                Retrieves the accounts. Results can be paginated, filtered, searched, and sorted.
            operationId: getAccountsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                    description:
                        ""
            tags: ["Account"]
        post:
            operationId: postAccount
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    description:
                        ""
            tags: ["Account"]
    "/accounts/by-external-link/{domain}/{entityName}/{entityId}":
        get:
            description:
                Retrieves the account by the external link.
            operationId: getAccountByExternalLinkDomainEntityNameEntityPage
            parameters:
                - in: path
                  name: domain
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                    description:
                        ""
            tags: ["Account"]
    "/accounts/entitlement-definitions":
        get:
            description:
                Retrieves the account entitlement definitions. Results can be paginated, filtered, searched, and sorted.
            operationId: getAccountEntitlementDefinitionsPage
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EntitlementDefinition"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EntitlementDefinition"
                                type: array
                    description:
                        ""
            tags: ["EntitlementDefinition"]
        post:
            operationId: postAccountEntitlementDefinition
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EntitlementDefinition"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/EntitlementDefinition"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/EntitlementDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/EntitlementDefinition"
                    description:
                        ""
            tags: ["EntitlementDefinition"]
    "/accounts/{accountKey}":
        delete:
            operationId: deleteAccount
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
        get:
            description:
                Retrieves the account.
            operationId: getAccount
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    description:
                        ""
            tags: ["Account"]
        put:
            operationId: putAccount
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Account"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Account"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Account"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Account"
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/account-permissions":
        delete:
            operationId: deleteAccountAccountPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AccountPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/AccountPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
        put:
            operationId: putAccountAccountPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AccountPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/AccountPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/assigned-teams":
        get:
            description:
                Retrieves the teams assigned to the account.
            operationId: getAccountAccountKeyAssignedTeamsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                    description:
                        ""
            tags: ["Team"]
    "/accounts/{accountKey}/assigned-teams/{teamKey}/roles":
        delete:
            description:
                Unassigns roles from the team for the account.
            operationId: deleteAccountAssignedTeamTeamKeyRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: teamRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
        get:
            description:
                Retrieves the roles of the team for the account.
            operationId: getAccountAccountKeyAssignedTeamTeamKeyRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TeamRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TeamRole"
                                type: array
                    description:
                        ""
            tags: ["TeamRole"]
        put:
            description:
                Assigns roles to the team for the account.
            operationId: putAccountAssignedTeamTeamKeyRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: teamRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/audit-entries":
        get:
            description:
                Retrieves the account's audit history.
            operationId: getAccountAccountKeyAuditEntriesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                    description:
                        ""
            tags: ["AuditEntry"]
    "/accounts/{accountKey}/child-accounts":
        get:
            description:
                Retrieves the account's child accounts.
            operationId: getAccountChildAccountsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/contacts":
        get:
            description:
                Retrieves the account's customer and worker contacts.
            operationId: getAccountAccountKeyContactsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                    description:
                        ""
            tags: ["Contact"]
    "/accounts/{accountKey}/contacts/by-email-address/{contactEmailAddress}/roles":
        delete:
            description:
                Unassigns roles from the contact for the account.
            operationId: deleteAccountContactByEmailAddresContactEmailAddressRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactEmailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
        get:
            description:
                Retrieves the account's contact's customer and worker contact roles.
            operationId: getAccountAccountKeyContactByEmailAddresContactEmailAddressRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactEmailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            description:
                Assigns roles to the contact for the account.
            operationId: putAccountContactByEmailAddresContactEmailAddressRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactEmailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/contacts/by-okta-id/{oktaId}/roles":
        delete:
            description:
                Unassigns roles from the contact for the account.
            operationId: deleteAccountContactByOktaRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
        get:
            description:
                Retrieves the account's contact's customer and worker contact roles.
            operationId: getAccountAccountKeyContactByOktaRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            description:
                Assigns roles to the contact for the account.
            operationId: putAccountContactByOktaRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/contacts/by-uuid/{contactUuid}/roles":
        delete:
            description:
                Unassigns roles from the contact for the account.
            operationId: deleteAccountContactByUuidContactUuidRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
        get:
            description:
                Retrieves the account's contact's customer and worker contact roles.
            operationId: getAccountAccountKeyContactByUuidContactUuidRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            description:
                Assigns roles to the contact for the account.
            operationId: putAccountContactByUuidContactUuidRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/customer-contacts":
        get:
            description:
                Retrieves the account's customer contacts.
            operationId: getAccountAccountKeyCustomerContactsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                    description:
                        ""
            tags: ["Contact"]
    "/accounts/{accountKey}/customer-contacts/by-email-address":
        delete:
            description:
                Unassigns customer contacts from the account.
            operationId: deleteAccountCustomerContactByEmailAddres
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactEmailAddresses
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/customer-contacts/by-email-address/{contactEmailAddress}/roles":
        get:
            description:
                Retrieves the account's contact's customer contact roles.
            operationId: getAccountAccountKeyCustomerContactByEmailAddresContactEmailAddressRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactEmailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
    "/accounts/{accountKey}/customer-contacts/by-okta-id":
        delete:
            description:
                Unassigns customer contacts from the account.
            operationId: deleteAccountCustomerContactByOkta
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: oktaIds
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/customer-contacts/by-okta-id/{oktaId}/roles":
        get:
            description:
                Retrieves the account's contact's customer contact roles.
            operationId: getAccountAccountKeyCustomerContactByOktaRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
    "/accounts/{accountKey}/customer-contacts/by-uuid":
        delete:
            description:
                Unassigns contacts from the account.
            operationId: deleteAccountCustomerContactByUuid
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactUuids
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/customer-contacts/by-uuid/{contactUuid}/roles":
        get:
            description:
                Retrieves the account's contact's customer contact roles.
            operationId: getAccountAccountKeyCustomerContactByUuidContactUuidRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
    "/accounts/{accountKey}/external-links":
        get:
            description:
                Retrieves the account's external links.
            operationId: getAccountAccountKeyExternalLinksPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the account.
            operationId: postAccountAccountKeyExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/accounts/{accountKey}/notes":
        get:
            description:
                Retrieves the account's notes.
            operationId: getAccountAccountKeyNotesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: status
                  schema:
                      type: string
                - in: query
                  name: type
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Note"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Note"
                                type: array
                    description:
                        ""
            tags: ["Note"]
        post:
            operationId: postAccountAccountKeyNote
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Note"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Note"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Note"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Note"
                    description:
                        ""
            tags: ["Note"]
    "/accounts/{accountKey}/postal-addresses":
        get:
            description:
                Retrieves the account's postal addresses.
            operationId: getAccountAccountKeyPostalAddressesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/PostalAddress"
                                type: array
                    description:
                        ""
            tags: ["PostalAddress"]
        post:
            operationId: postAccountAccountKeyPostalAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PostalAddress"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/PostalAddress"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                    description:
                        ""
            tags: ["PostalAddress"]
    "/accounts/{accountKey}/product-consumptions":
        get:
            description:
                Retrieves the account's product consumptions.
            operationId: getAccountAccountKeyProductConsumptionsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                    description:
                        ""
            tags: ["ProductConsumption"]
        post:
            operationId: postAccountAccountKeyProductConsumption
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductConsumption"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductConsumption"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductConsumption"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ProductConsumption"
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/accounts/{accountKey}/product-purchases":
        get:
            description:
                Retrieves the account's product purchases.
            operationId: getAccountAccountKeyProductPurchasesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                    description:
                        ""
            tags: ["ProductPurchase"]
        post:
            operationId: postAccountAccountKeyProductPurchase
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductPurchase"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductPurchase"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductPurchase"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ProductPurchase"
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/accounts/{accountKey}/product/{productKey}/product-purchase-view":
        get:
            description:
                Retrieves the account's product consumptions and product purchases based on product.
            operationId: getAccountAccountKeyProductProductKeyProductPurchaseView
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductPurchaseView"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ProductPurchaseView"
                    description:
                        ""
            tags: ["ProductPurchaseView"]
    "/accounts/{accountKey}/teams":
        get:
            description:
                Retrieves the account's teams.
            operationId: getAccountAccountKeyTeamsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                    description:
                        ""
            tags: ["Team"]
        post:
            operationId: postAccountAccountKeyTeam
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Team"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Team"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Team"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Team"
                    description:
                        ""
            tags: ["Team"]
    "/accounts/{accountKey}/worker-contacts":
        get:
            description:
                Retrieves the account's worker contacts.
            operationId: getAccountAccountKeyWorkerContactsPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                    description:
                        ""
            tags: ["Contact"]
    "/accounts/{accountKey}/worker-contacts/by-email-address":
        delete:
            description:
                Unassigns worker contacts from the account.
            operationId: deleteAccountWorkerContactByEmailAddres
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactEmailAddresses
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/worker-contacts/by-email-address/{contactEmailAddress}/roles":
        get:
            description:
                Retrieves the account's contact's customer contact roles.
            operationId: getAccountAccountKeyWorkerContactByEmailAddresContactEmailAddressRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactEmailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
    "/accounts/{accountKey}/worker-contacts/by-okta-id":
        delete:
            description:
                Unassigns customer contacts from the account.
            operationId: deleteAccountWorkerContactByOkta
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: oktaIds
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/worker-contacts/by-okta-id/{oktaId}/roles":
        get:
            description:
                Retrieves the account's contact's customer contact roles.
            operationId: getAccountAccountKeyWorkerContactByOktaRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
    "/accounts/{accountKey}/worker-contacts/by-uuid":
        delete:
            description:
                Unassigns contacts from the account.
            operationId: deleteAccountWorkerContactByUuid
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactUuids
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Account"]
    "/accounts/{accountKey}/worker-contacts/by-uuid/{contactUuid}/roles":
        get:
            description:
                Retrieves the account's contact's customer contact roles.
            operationId: getAccountAccountKeyWorkerContactByUuidContactUuidRolesPage
            parameters:
                - in: path
                  name: accountKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
    "/audit-entries/{auditEntryKey}":
        get:
            description:
                Retrieves the audit entry.
            operationId: getAuditEntry
            parameters:
                - in: path
                  name: auditEntryKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AuditEntry"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/AuditEntry"
                    description:
                        ""
            tags: ["AuditEntry"]
    "/contact-roles":
        get:
            description:
                Retrieves the contact roles. Results can be paginated, filtered, searched, and sorted.
            operationId: getContactRolesPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        post:
            operationId: postContactRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactRole"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactRole"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                    description:
                        ""
            tags: ["ContactRole"]
    "/contact-roles/{contactRoleKey}":
        delete:
            operationId: deleteContactRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactRoleKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ContactRole"]
        get:
            description:
                Retrieves the contact role.
            operationId: getContactRole
            parameters:
                - in: path
                  name: contactRoleKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            operationId: putContactRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactRoleKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactRole"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactRole"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                    description:
                        ""
            tags: ["ContactRole"]
    "/contact-roles/{contactRoleKey}/audit-entries":
        get:
            description:
                Retrieves the contact role's audit history.
            operationId: getContactRoleContactRoleKeyAuditEntriesPage
            parameters:
                - in: path
                  name: contactRoleKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                    description:
                        ""
            tags: ["AuditEntry"]
    "/contact-roles/{contactRoleKey}/contact-role-permissions":
        delete:
            operationId: deleteContactRoleContactRolePermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactRoleKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactRolePermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactRolePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            operationId: putContactRoleContactRolePermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactRoleKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactRolePermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactRolePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ContactRole"]
    "/contact-roles/{contactRoleType}/{contactRoleName}":
        get:
            description:
                Retrieves the contact role by name.
            operationId: getContactRoleContactRoleTypeContactRoleName
            parameters:
                - in: path
                  name: contactRoleType
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactRoleName
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ContactRole"
                    description:
                        ""
            tags: ["ContactRole"]
    "/contacts":
        get:
            description:
                Retrieves the contacts. Results can be paginated, filtered, searched, and sorted.
            operationId: getContactsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                    description:
                        ""
            tags: ["Contact"]
        post:
            operationId: postContact
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Contact"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Contact"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
    "/contacts/by-email-address/{emailAddress}":
        delete:
            operationId: deleteContactByEmailAddresEmailAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
        get:
            description:
                Retrieves the contact.
            operationId: getContactByEmailAddresEmailAddress
            parameters:
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
        put:
            operationId: putContactByEmailAddresEmailAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Contact"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Contact"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
    "/contacts/by-okta-id/{oktaId}":
        delete:
            operationId: deleteContactByOkta
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
        get:
            description:
                Retrieves the contact.
            operationId: getContactByOkta
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
        put:
            operationId: putContactByOkta
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Contact"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Contact"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
    "/contacts/by-okta-id/{oktaId}/accounts":
        get:
            description:
                Retrieves the contact's accounts.
            operationId: getContactByOktaAccountsPage
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                    description:
                        ""
            tags: ["Account"]
    "/contacts/by-okta-id/{oktaId}/audit-entries":
        get:
            description:
                Retrieves the contact's audit history.
            operationId: getContactByOktaAuditEntriesPage
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                    description:
                        ""
            tags: ["AuditEntry"]
    "/contacts/by-okta-id/{oktaId}/contact-account-views":
        get:
            description:
                Retrieves the contact's accounts and associated contact roles.
            operationId: getContactByOktaContactAccountViewsPage
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactAccountView"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactAccountView"
                                type: array
                    description:
                        ""
            tags: ["ContactAccountView"]
    "/contacts/by-okta-id/{oktaId}/contact-permissions":
        delete:
            operationId: deleteContactByOktaContactPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
        put:
            operationId: putContactByOktaContactPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
    "/contacts/by-okta-id/{oktaId}/external-links":
        get:
            description:
                Retrieves the contact's external links.
            operationId: getContactByOktaExternalLinksPage
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the contact.
            operationId: postContactByOktaExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/contacts/by-okta-id/{oktaId}/product-consumptions":
        get:
            description:
                Retrieves the contacts product consumptions.
            operationId: getContactByOktaProductConsumptionsPage
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/contacts/by-okta-id/{oktaId}/product-purchases":
        get:
            description:
                Retrieves the contacts product purchases.
            operationId: getContactByOktaProductPurchasesPage
            parameters:
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/contacts/by-uuid/{contactUuid}":
        delete:
            operationId: deleteContactByUuidContactUuid
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
        get:
            description:
                Retrieves the contact.
            operationId: getContactByUuidContactUuid
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
        put:
            operationId: putContactByUuidContactUuid
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Contact"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Contact"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Contact"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Contact"
                    description:
                        ""
            tags: ["Contact"]
    "/contacts/by-uuid/{contactUuid}/accounts":
        get:
            description:
                Retrieves the contact's accounts.
            operationId: getContactByUuidContactUuidAccountsPage
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                    description:
                        ""
            tags: ["Account"]
    "/contacts/by-uuid/{contactUuid}/audit-entries":
        get:
            description:
                Retrieves the contact's audit history.
            operationId: getContactByUuidContactUuidAuditEntriesPage
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                    description:
                        ""
            tags: ["AuditEntry"]
    "/contacts/by-uuid/{contactUuid}/contact-account-views":
        get:
            description:
                Retrieves the contact's accounts and associated contact roles.
            operationId: getContactByUuidContactUuidContactAccountViewsPage
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactAccountView"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactAccountView"
                                type: array
                    description:
                        ""
            tags: ["ContactAccountView"]
    "/contacts/by-uuid/{contactUuid}/contact-permissions":
        delete:
            operationId: deleteContactByUuidContactUuidContactPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
        put:
            operationId: putContactByUuidContactUuidContactPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ContactPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Contact"]
    "/contacts/by-uuid/{contactUuid}/external-links":
        get:
            description:
                Retrieves the contact's external links.
            operationId: getContactByUuidContactUuidExternalLinksPage
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the contact.
            operationId: postContactByUuidContactUuidExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/contacts/by-uuid/{contactUuid}/product-consumptions":
        get:
            description:
                Retrieves the contacts product consumptions.
            operationId: getContactByUuidContactUuidProductConsumptionsPage
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/contacts/by-uuid/{contactUuid}/product-purchases":
        get:
            description:
                Retrieves the contacts product purchases.
            operationId: getContactByUuidContactUuidProductPurchasesPage
            parameters:
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/contacts/entitlement-definitions":
        get:
            description:
                Retrieves the contact entitlement definitions.
            operationId: getContactEntitlementDefinitionsPage
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EntitlementDefinition"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/EntitlementDefinition"
                                type: array
                    description:
                        ""
            tags: ["EntitlementDefinition"]
        post:
            operationId: postContactEntitlementDefinition
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/EntitlementDefinition"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/EntitlementDefinition"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/EntitlementDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/EntitlementDefinition"
                    description:
                        ""
            tags: ["EntitlementDefinition"]
    "/entitlement-definitions/{entitlementDefinitionKey}":
        delete:
            operationId: deleteEntitlementDefinition
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: entitlementDefinitionKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["EntitlementDefinition"]
        get:
            description:
                Retrieves the entitlement definition.
            operationId: getEntitlementDefinition
            parameters:
                - in: path
                  name: entitlementDefinitionKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/EntitlementDefinition"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/EntitlementDefinition"
                    description:
                        ""
            tags: ["EntitlementDefinition"]
    "/entitlement-definitions/{entitlementDefinitionKey}/synchronize":
        post:
            description:
                Immediately runs a synchronization of the entitlement definition.
            operationId: postEntitlementDefinitionSynchronize
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: entitlementDefinitionKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["EntitlementDefinition"]
    "/external-links/{externalLinkKey}":
        delete:
            operationId: deleteExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: externalLinkKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ExternalLink"]
        get:
            description:
                Retrieves the external link.
            operationId: getExternalLink
            parameters:
                - in: path
                  name: externalLinkKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
        put:
            description:
                Updates the external link. Only the entityId field can be updated.
            operationId: putExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: externalLinkKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/notes/{noteKey}":
        delete:
            operationId: deleteNote
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: noteKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Note"]
        get:
            description:
                Retrieves the note.
            operationId: getNote
            parameters:
                - in: path
                  name: noteKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Note"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Note"
                    description:
                        ""
            tags: ["Note"]
        put:
            operationId: putNote
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: noteKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Note"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Note"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Note"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Note"
                    description:
                        ""
            tags: ["Note"]
    "/postal-addresses/{postalAddressId}":
        delete:
            operationId: deletePostalAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: postalAddressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["PostalAddress"]
        get:
            description:
                Retrieves the postal address.
            operationId: getPostalAddress
            parameters:
                - in: path
                  name: postalAddressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                    description:
                        ""
            tags: ["PostalAddress"]
        put:
            operationId: putPostalAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: postalAddressId
                  required: true
                  schema:
                      format: int64
                      type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PostalAddress"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/PostalAddress"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/PostalAddress"
                    description:
                        ""
            tags: ["PostalAddress"]
    "/product-consumptions":
        get:
            description:
                Retrieves the product consumptions. Results can be paginated, filtered, searched, and sorted.
            operationId: getProductConsumptionsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/product-consumptions/by-external-link/{domain}/{entityName}/{entityId}":
        get:
            description:
                Retrieves the product consumptions by the external link.
            operationId: getProductConsumptionByExternalLinkDomainEntityNameEntityPage
            parameters:
                - in: path
                  name: domain
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductConsumption"
                                type: array
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/product-consumptions/{productConsumptionKey}":
        delete:
            operationId: deleteProductConsumption
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productConsumptionKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ProductConsumption"]
        get:
            description:
                Retrieves the product consumption.
            operationId: getProductConsumption
            parameters:
                - in: path
                  name: productConsumptionKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductConsumption"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ProductConsumption"
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/product-consumptions/{productConsumptionKey}/external-links":
        get:
            description:
                Retrieves the product consumption's external links.
            operationId: getProductConsumptionProductConsumptionKeyExternalLinksPage
            parameters:
                - in: path
                  name: productConsumptionKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the product consumption.
            operationId: postProductConsumptionProductConsumptionKeyExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productConsumptionKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/product-consumptions/{productConsumptionKey}/product-consumption-permissions":
        delete:
            operationId: deleteProductConsumptionProductConsumptionPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productConsumptionKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductConsumptionPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductConsumptionPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ProductConsumption"]
        put:
            operationId: putProductConsumptionProductConsumptionPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productConsumptionKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductConsumptionPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductConsumptionPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ProductConsumption"]
    "/product-purchase-views":
        get:
            description:
                Retrieves the account's products and related product consumptions and product purchases.
            operationId: getProductPurchaseViewsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchaseView"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchaseView"
                                type: array
                    description:
                        ""
            tags: ["ProductPurchaseView"]
    "/product-purchases":
        get:
            description:
                Retrieves the product purchases. Results can be paginated, filtered, searched, and sorted.
            operationId: getProductPurchasesPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/product-purchases/by-external-link/{domain}/{entityName}/{entityId}":
        get:
            description:
                Retrieves the product purchases by the external link.
            operationId: getProductPurchaseByExternalLinkDomainEntityNameEntityPage
            parameters:
                - in: path
                  name: domain
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ProductPurchase"
                                type: array
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/product-purchases/{productPurchaseKey}":
        delete:
            operationId: deleteProductPurchase
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ProductPurchase"]
        get:
            description:
                Retrieves the product purchase.
            operationId: getProductPurchase
            parameters:
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductPurchase"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ProductPurchase"
                    description:
                        ""
            tags: ["ProductPurchase"]
        put:
            operationId: putProductPurchase
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductPurchase"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductPurchase"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductPurchase"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ProductPurchase"
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/product-purchases/{productPurchaseKey}/external-links":
        get:
            description:
                Retrieves the product purchase's external links.
            operationId: getProductPurchaseProductPurchaseKeyExternalLinksPage
            parameters:
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the product purchase.
            operationId: postProductPurchaseProductPurchaseKeyExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/product-purchases/{productPurchaseKey}/product-purchase-permissions":
        delete:
            operationId: deleteProductPurchaseProductPurchasePermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductPurchasePermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductPurchasePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ProductPurchase"]
        put:
            operationId: putProductPurchaseProductPurchasePermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productPurchaseKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductPurchasePermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProductPurchasePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["ProductPurchase"]
    "/products":
        get:
            description:
                Retrieves the products. Results can be paginated, filtered, searched, and sorted.
            operationId: getProductsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                    description:
                        ""
            tags: ["Product"]
        post:
            operationId: postProduct
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Product"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Product"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
                    description:
                        ""
            tags: ["Product"]
    "/products/by-external-link/{domain}/{entityName}/{entityId}":
        get:
            description:
                Retrieves the products by the external link.
            operationId: getProductByExternalLinkDomainEntityNameEntityPage
            parameters:
                - in: path
                  name: domain
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Product"
                                type: array
                    description:
                        ""
            tags: ["Product"]
    "/products/by-name/{productName}":
        get:
            description:
                Retrieves the product with the exact name.
            operationId: getProductByNameProductName
            parameters:
                - in: path
                  name: productName
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
                    description:
                        ""
            tags: ["Product"]
    "/products/{productKey}":
        delete:
            operationId: deleteProduct
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Product"]
        get:
            description:
                Retrieves the product.
            operationId: getProduct
            parameters:
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
                    description:
                        ""
            tags: ["Product"]
        put:
            operationId: putProduct
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Product"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Product"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Product"
                    description:
                        ""
            tags: ["Product"]
    "/products/{productKey}/external-links":
        get:
            description:
                Retrieves the product's external links.
            operationId: getProductProductKeyExternalLinksPage
            parameters:
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the product.
            operationId: postProductProductKeyExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/products/{productKey}/product-permissions":
        delete:
            operationId: deleteProductProductPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProducePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Product"]
        put:
            operationId: putProductProductPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: productKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ProductPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ProducePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Product"]
    "/team-roles":
        get:
            description:
                Retrieves the team roles. Results can be paginated, filtered, searched, and sorted.
            operationId: getTeamRolesPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TeamRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/TeamRole"
                                type: array
                    description:
                        ""
            tags: ["TeamRole"]
        post:
            operationId: postTeamRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TeamRole"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TeamRole"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                    description:
                        ""
            tags: ["TeamRole"]
    "/team-roles/{teamRoleKey}":
        delete:
            operationId: deleteTeamRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamRoleKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["TeamRole"]
        get:
            description:
                Retrieves the team role.
            operationId: getTeamRole
            parameters:
                - in: path
                  name: teamRoleKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                    description:
                        ""
            tags: ["TeamRole"]
        put:
            operationId: putTeamRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamRoleKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TeamRole"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TeamRole"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                    description:
                        ""
            tags: ["TeamRole"]
    "/team-roles/{teamRoleKey}/audit-entries":
        get:
            description:
                Retrieves the team role's audit history.
            operationId: getTeamRoleTeamRoleKeyAuditEntriesPage
            parameters:
                - in: path
                  name: teamRoleKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                    description:
                        ""
            tags: ["AuditEntry"]
    "/team-roles/{teamRoleKey}/team-role-permissions":
        delete:
            operationId: deleteTeamRoleTeamRolePermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamRoleKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TeamRolePermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TeamRolePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["TeamRole"]
        put:
            operationId: putTeamRoleTeamRolePermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamRoleKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TeamRolePermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TeamRolePermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["TeamRole"]
    "/team-roles/{teamRoleType}/{teamRoleName}":
        get:
            description:
                Retrieves the team role by name.
            operationId: getTeamRoleTeamRoleTypeTeamRoleName
            parameters:
                - in: path
                  name: teamRoleType
                  required: true
                  schema:
                      type: string
                - in: path
                  name: teamRoleName
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/TeamRole"
                    description:
                        ""
            tags: ["TeamRole"]
    "/teams":
        get:
            description:
                Retrieves the teams. Results can be paginated, filtered, searched, and sorted.
            operationId: getTeamsPage
            parameters:
                - in: query
                  name: filter
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
                - in: query
                  name: search
                  schema:
                      type: string
                - in: query
                  name: sort
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                    description:
                        ""
            tags: ["Team"]
    "/teams/by-external-link/{domain}/{entityName}/{entityId}":
        get:
            description:
                Retrieves the team by the external link.
            operationId: getTeamByExternalLinkDomainEntityNameEntityPage
            parameters:
                - in: path
                  name: domain
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityName
                  required: true
                  schema:
                      type: string
                - in: path
                  name: entityId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Team"
                                type: array
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}":
        delete:
            operationId: deleteTeam
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        get:
            description:
                Retrieves the team.
            operationId: getTeam
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Team"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Team"
                    description:
                        ""
            tags: ["Team"]
        put:
            operationId: putTeam
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Team"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/Team"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Team"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/Team"
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/assigned-accounts":
        get:
            description:
                Retrieves the team's assigned accounts.
            operationId: getTeamTeamKeyAssignedAccountsPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Account"
                                type: array
                    description:
                        ""
            tags: ["Account"]
    "/teams/{teamKey}/audit-entries":
        get:
            description:
                Retrieves the team's audit history.
            operationId: getTeamTeamKeyAuditEntriesPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/AuditEntry"
                                type: array
                    description:
                        ""
            tags: ["AuditEntry"]
    "/teams/{teamKey}/contacts":
        get:
            description:
                Retrieves the team's contacts.
            operationId: getTeamTeamKeyContactsPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/Contact"
                                type: array
                    description:
                        ""
            tags: ["Contact"]
    "/teams/{teamKey}/contacts/by-email-address":
        delete:
            description:
                Unassigns contacts from the team.
            operationId: deleteTeamContactByEmailAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: emailAddresses
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        put:
            description:
                Assigns contacts to the team.
            operationId: putTeamContactByEmailAddress
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: emailAddresses
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/contacts/by-email-address/{emailAddress}/roles":
        delete:
            description:
                Unassigns roles from the contact for the team.
            operationId: deleteTeamContactByEmailAddressRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        get:
            description:
                Retrieves the team's contact's contact roles.
            operationId: getTeamTeamKeyContactByEmailAddressRolesPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            description:
                Assigns roles to the contact for the team.
            operationId: putTeamContactByEmailAddressRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: emailAddress
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/contacts/by-okta-id":
        delete:
            description:
                Unassigns contacts from the team.
            operationId: deleteTeamContactByOkta
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: oktaIds
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        put:
            description:
                Assigns contacts to the team.
            operationId: putTeamContactByOkta
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: oktaIds
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/contacts/by-okta-id/{oktaId}/roles":
        delete:
            description:
                Unassigns roles from the contact for the team.
            operationId: deleteTeamContactByOktaRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        get:
            description:
                Retrieves the team's contact's contact roles.
            operationId: getTeamTeamKeyContactByOktaRolesPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            description:
                Assigns roles to the contact for the team.
            operationId: putTeamContactByOktaRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: oktaId
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/contacts/by-uuid":
        delete:
            description:
                Unassigns contacts from the team.
            operationId: deleteTeamContactByUuid
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactUuids
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        put:
            description:
                Assigns contacts to the team.
            operationId: putTeamContactByUuid
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactUuids
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/contacts/by-uuid/{contactUuid}/roles":
        delete:
            description:
                Unassigns roles from the contact for the team.
            operationId: deleteTeamContactByUuidContactUuidRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        get:
            description:
                Retrieves the team's contact's contact roles.
            operationId: getTeamTeamKeyContactByUuidContactUuidRolesPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ContactRole"
                                type: array
                    description:
                        ""
            tags: ["ContactRole"]
        put:
            description:
                Assigns roles to the contact for the team.
            operationId: putTeamContactByUuidContactUuidRole
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: path
                  name: contactUuid
                  required: true
                  schema:
                      type: string
                - in: query
                  name: contactRoleKeys
                  required: true
                  schema:
                      items:
                          type: string
                      type: array
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
    "/teams/{teamKey}/external-links":
        get:
            description:
                Retrieves the team's external links.
            operationId: getTeamTeamKeyExternalLinksPage
            parameters:
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
                - in: query
                  name: page
                  schema:
                      type: integer
                - in: query
                  name: pageSize
                  schema:
                      type: integer
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                        application/xml:
                            schema:
                                items:
                                    $ref: "#/components/schemas/ExternalLink"
                                type: array
                    description:
                        ""
            tags: ["ExternalLink"]
        post:
            description:
                Adds an external link to the team.
            operationId: postTeamTeamKeyExternalLink
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/ExternalLink"
                required: true
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                        application/xml:
                            schema:
                                $ref: "#/components/schemas/ExternalLink"
                    description:
                        ""
            tags: ["ExternalLink"]
    "/teams/{teamKey}/team-permissions":
        delete:
            operationId: deleteTeamTeamPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TeamPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TeamPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]
        put:
            operationId: putTeamTeamPermission
            parameters:
                - $ref: "#/components/parameters/AgentName"
                - $ref: "#/components/parameters/AgentUID"
                - in: path
                  name: teamKey
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/TeamPermission"
                    application/xml:
                        schema:
                            $ref: "#/components/schemas/TeamPermission"
                description:
                    ""
            responses:
                204:
                    content:
                        application/json: {}
                        application/xml: {}
                    description:
                        ""
            tags: ["Team"]